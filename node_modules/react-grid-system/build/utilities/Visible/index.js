"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var style = _interopRequireWildcard(require("./style"));
var _ScreenClassResolver = _interopRequireDefault(require("../../context/ScreenClassResolver"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const Visible = _ref => {
  let {
    children,
    xs,
    sm,
    md,
    lg,
    xl,
    xxl,
    xxxl
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_ScreenClassResolver.default, null, screenClass => !style.visible({
    screenClass,
    xs,
    sm,
    md,
    lg,
    xl,
    xxl,
    xxxl
  }) ? null : children);
};
Visible.propTypes = {
  /**
   * Content of the component
   */
  children: _propTypes.default.node.isRequired,
  /**
   * Show on extra small devices
   */
  xs: _propTypes.default.bool,
  /**
   * Show on small devices
   */
  sm: _propTypes.default.bool,
  /**
   * Show on medium devices
   */
  md: _propTypes.default.bool,
  /**
   * Show on large devices
   */
  lg: _propTypes.default.bool,
  /**
   * Show on xlarge devices
   */
  xl: _propTypes.default.bool,
  /**
   * Show on xxlarge devices
   */
  xxl: _propTypes.default.bool,
  /**
   * Show on xxxlarge devices
   */
  xxxl: _propTypes.default.bool
};
Visible.defaultProps = {
  xs: false,
  sm: false,
  md: false,
  lg: false,
  xl: false,
  xxl: false,
  xxxl: false
};
var _default = Visible;
exports.default = _default;